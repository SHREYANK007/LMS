version: '3.8'

services:
  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scoresmart-lms
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@db:5432/scoresmart_lms
    depends_on:
      - db
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./.env.local:/app/.env.local
    networks:
      - scoresmart-network

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: scoresmart-db
    restart: always
    environment:
      - POSTGRES_DB=scoresmart_lms
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=your_secure_password_here
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - scoresmart-network

  # Redis Cache (optional)
  redis:
    image: redis:7-alpine
    container_name: scoresmart-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - scoresmart-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: scoresmart-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - app
    networks:
      - scoresmart-network

volumes:
  postgres-data:
  redis-data:

networks:
  scoresmart-network:
    driver: bridge